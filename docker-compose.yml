services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3000:5000"  # Maps container port 5000 to host port 3000
    depends_on:
      - influxdb
      - mqtt-broker
    environment:
      - NODE_ENV=production
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN}
      - INFLUXDB_ORG=${INFLUXDB_ORG}
      - INFLUXDB_BUCKET=gym_occupancy
      - MQTT_BROKER=mqtt-broker
      - MQTT_PORT=1883
      - MQTT_TOPIC=gym/occupancy/#
    restart: always
    networks:
      - gym-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8000:80"  # Maps container port 80 to host port 8000
    depends_on:
      - backend
    restart: always
    networks:
      - gym-network

  python-sensors:
    build:
      context: ./Python
      dockerfile: Dockerfile
    depends_on:
      - influxdb
      - mqtt-broker
    environment:
      - RUNNING_ON_HARDWARE=false
      - MQTT_BROKER=mqtt-broker
      - MQTT_PORT=1883
      - MQTT_TOPIC=gym/occupancy/zone1
      - SENSOR_LOCATION=zone1
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN}
      - INFLUXDB_ORG=${INFLUXDB_ORG}
      - INFLUXDB_BUCKET=gym_occupancy
    restart: always
    networks:
      - gym-network

  influxdb:
    image: influxdb:2.0
    ports:
      - "8086:8086"
    volumes:
      - influxdb-data:/var/lib/influxdb2
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=password123
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_ORG}
      - DOCKER_INFLUXDB_INIT_BUCKET=gym_occupancy
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_TOKEN}
    restart: always
    networks:
      - gym-network

  mqtt-broker:
    image: eclipse-mosquitto:latest
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - mqtt-data:/mosquitto/data
      - mqtt-log:/mosquitto/log
      - ./mosquitto.conf:/mosquitto/config/mosquitto.conf
    restart: always
    networks:
      - gym-network
      
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    restart: always
    networks:
      - gym-network
      
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password123
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource,grafana-influxdb-datasource
    depends_on:
      - influxdb
      - prometheus
    restart: always
    networks:
      - gym-network

volumes:
  influxdb-data:
  mqtt-data:
  mqtt-log:
  grafana-data:
  prometheus-data:

networks:
  gym-network:
    driver: bridge